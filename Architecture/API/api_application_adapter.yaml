swagger: '2.0'
info:
  description: >
    Application adapter consists of one service endpoint "/adapter" handling one
    resource "integrationData". Adapter accepts integrationData from the
    integration layer. The adapter checks if there is already a record that
    represents the data and updates that record (deduplication) or creates a new
    one. The emmition of the creation or update is dependant on the "isExternal"
    flag.
  version: 1.0.4
  title: Application Adapter API
host: app.csp.org
schemes:
  - https
paths:
  /v1/adapter/integrationData:
    post:
      summary: Proccess new integration data from integration layer
      description: >
        Application adapter gets new data from integration layer. If the
        "isExternal" flag is set to false, the data is coming from another
        application inside the local CSP. The data is processed as such and if
        the process results in another data record being created or updated, the
        new or updated record is emited back to the integration layer. If the
        "isExternal" flag is set to true, the data is coming from an external
        CSP. The data is processed as such and if the process results in a new
        data record or an update to an existing data record, the new or updated
        record is emited back to the integration layer with the flag "toShare"
        set to false.
      operationId: addIntData
      consumes:
        - application/json
      parameters:
        - in: body
          name: intDataObj
          required: true
          schema:
            $ref: '#/definitions/IntegrationData'
      responses:
        '200':
          description: Successful operation
        '400':
          description: Malformed Integration Data Structure
    put:
      summary: Process integration data update from integration layer
      description: |
        (See POST)
      operationId: updateIntData
      consumes:
        - application/json
      parameters:
        - in: body
          name: intDataObj
          required: true
          schema:
            $ref: '#/definitions/IntegrationData'
      responses:
        '200':
          description: Successful operation
        '400':
          description: Malformed Integration Data Structure
    delete:
      summary: Process integration data deletion from integration layer
      description: >
        Application adapter get deletion notification from integration layer.
        the adapter checks if that record is used by the application and updates
        the affected records in the application datastore. If the process
        results in a local data record being updated, the new or updated record
        is emited back to the integration layer. If the process results in a
        local data record being deleted, the delete request is emitted back to
        the integration layer. All delete requests by the emitter have the
        "toShare" flag to false. The dataObject is expected to be null.
        isExternal is expected to be false.
      operationId: deleteIntData
      consumes:
        - application/json
      parameters:
        - in: body
          name: intDataObj
          required: true
          schema:
            $ref: '#/definitions/IntegrationData'
      responses:
        '200':
          description: Successful operation
        '400':
          description: Malformed Integration Data Structure
definitions:
  IntegrationData:
    type: object
    properties:
      dataParams:
        $ref: '#/definitions/DataParams'
      sharingParams:
        $ref: '#/definitions/SharingParams'
      dataType:
        $ref: '#/definitions/IntegrationDataType'
      dataObject:
        type: string
        format: json
  DataParams:
    type: object
    description: >
      origin[Csp/Application/Record]Id are only set by the application that
      initiates flow #1 (see SAD).

      In this case Origin[csp/application/record]Id and
      [csp/application/record]Id are equal.

      In the case where a principal application adapter gets data from external
      CSP and re-emitts them for indexing,

      [csp/application/record]Id are set to that of the principal application
      while Origin[csp/application/record]Id

      remain unchanged.
    properties:
      originCspId:
        type: string
      originApplicationId:
        type: string
      originRecordId:
        type: string
      cspId:
        type: string
      applicationId:
        type: string
      recordId:
        type: string
      dateTime:
        type: string
        format: dateTime
        description: |
          timestamp of the record emission
      url:
        type: string
        format: url
        description: |
          reference to the emmitted record based on [csp/application/record]Id
          (see SAD)
    required:
      - originCspId
      - originApplicationId
      - originRecordId
      - cspId
      - applicationId
      - recordId
      - dateTime
  IntegrationDataType:
    type: string
    enum:
      - event
      - threat
      - incident
      - vulnerability
      - artefact
      - chat
      - file
      - contact
      - trustCircle
  SharingParams:
    type: object
    description: |
      only one of the trustCircleId or teamId should exist.
      If none exists, sharing is done based on data specific
      trust circles
    properties:
      toShare:
        type: boolean
      isExternal:
        type: boolean
      trustCircleId:
        type: string
      teamId:
        type: string
    required:
      - toShare
      - isExternal
