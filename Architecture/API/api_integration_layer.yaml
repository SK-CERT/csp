swagger: '2.0'
info:
  description: >
    Integration Layer consists of two service endpoints. DSL accepts data from
    applications and the integration layer performs synchronization of that data
    between eligible applications, indexing and collaboration with external
    CSPs, i.e. sends the data to external CSPs based on the data specific trust
    circles or the predefined [trust circle OR team] ID. DCL accepts data from 
    external CSPs, authorizes that data based on data specific trust circles and
    the integration layer performs synchronization of that data between eligible
    applications.
  version: 1.0.4
  title: Integration Layer API
schemes:
  - https
paths:
  /v1/dsl/integrationData:
    post:
      tags:
        - dsl
      summary: Process new integration data from application
      description: >
        Integration layer gets new data from an application. Synchronizes the
        data between eligible applications. Indexes the data into Elastic. Sends
        the data to external CSPs if toShare is set to true.
      operationId: synchNewIntData
      consumes:
        - application/json
      parameters:
        - in: body
          name: intDataObj
          required: true
          schema:
            $ref: '#/definitions/IntegrationData'
      responses:
        '200':
          description: Successful operation
        '400':
          description: Malformed Integration Data Structure
    put:
      tags:
        - dsl
      summary: Process integration data update from application
      description: >
        Integration layer gets updated data from an application. Synchronizes
        the data between eligible applications. Updates the existing indexed
        document in Elastic. Sends the data to external CSPs if toShare is set
        to true.
      operationId: synchUpdatedIntData
      consumes:
        - application/json
      parameters:
        - in: body
          name: intDataObj
          required: true
          schema:
            $ref: '#/definitions/IntegrationData'
      responses:
        '200':
          description: Successful operation
        '400':
          description: Malformed Integration Data Structure
    delete:
      tags:
        - dsl
      summary: Process integration data deletion in application
      description: >
        Integration layer gets deletion request from an application on a
        specific integration data record. Forwards the deletion request to
        eligible applications. toShare is always set to false. Deletes the
        existing indexed document from Elastic. No deletion requests are
        forwarded to external CSPs. dataObject is always null.
      operationId: synchDeletedIntData
      consumes:
        - application/json
      parameters:
        - in: body
          name: intDataObj
          required: true
          schema:
            $ref: '#/definitions/IntegrationData'
      responses:
        '200':
          description: Successful operation
        '400':
          description: Malformed Integration Data Structure
  /v1/dcl/integrationData:
    post:
      tags:
        - dcl
      summary: Process new or updated integration data from external CSP
      description: >
        Integration layer gets new or updated data from external CSP. Authorizes
        the data based on data specific trust circles. Sets the isExternal flag
        to true. Synchronizes the data to principal application based on data
        type. Principal applications expected to emit updated data back to
        integration layer after debuplication (/dsl will handle emitions).
      operationId: colabIntData
      consumes:
        - application/json
      parameters:
        - in: body
          name: intDataObj
          required: true
          schema:
            $ref: '#/definitions/IntegrationData'
      responses:
        '200':
          description: Successful operation
        '400':
          description: Malformed Integration Data Structure
        '403':
          description: >-
            CSP authorization failed. External CSP is not authorized to send
            specific data type
        '415':
          description: >-
            Unsupported data type. Local CSP does not support given data type.
            No application that handles given data type is installed
definitions:
  IntegrationData:
    type: object
    properties:
      dataParams:
        $ref: '#/definitions/DataParams'
      sharingParams:
        $ref: '#/definitions/SharingParams'
      dataType:
        $ref: '#/definitions/IntegrationDataType'
      dataObject:
        type: string
        format: json
  DataParams:
    type: object
    description: >
      origin[Csp/Application/Record]Id are only set by the application that
      initiates flow #1 (see SAD).

      In this case Origin[csp/application/record]Id and
      [csp/application/record]Id are equal.

      In the case where a principal application adapter gets data from external
      CSP and re-emitts them for indexing,

      [csp/application/record]Id are set to that of the principal application
      while Origin[csp/application/record]Id

      remain unchanged.
    properties:
      originCspId:
        type: string
      originApplicationId:
        type: string
      originRecordId:
        type: string
      cspId:
        type: string
      applicationId:
        type: string
      recordId:
        type: string
      dateTime:
        type: string
        format: dateTime
        description: |
          timestamp of the record emission
      url:
        type: string
        format: url
        description: |
          reference to the emmitted record based on [csp/application/record]Id.
          (see SAD)
    required:
      - originCspId
      - originApplicationId
      - originRecordId
      - cspId
      - applicationId
      - recordId
      - dateTime
  IntegrationDataType:
    type: string
    enum:
      - event
      - threat
      - incident
      - vulnerability
      - artefact
      - chat
      - file
      - contact
      - trustCircle
  SharingParams:
    type: object
    description: |
      only one of the trustCircleId or teamId should exist.
      If none exists, sharing is done based on data specific
      trust circles
    properties:
      toShare:
        type: boolean
      isExternal:
        type: boolean
      trustCircleId:
        type: string
      teamId:
        type: string
    required:
      - toShare
      - isExternal
