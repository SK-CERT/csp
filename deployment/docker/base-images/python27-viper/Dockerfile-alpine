FROM alpine:3.5
MAINTAINER Christos Panagiotou

# ensure local python is preferred over distribution python
ENV PATH /usr/local/bin:$PATH

# Ensure that Python outputs everything that's printed inside
# the application rather than buffering it.
ENV PYTHONUNBUFFERED 1

# http://bugs.python.org/issue19846
# > At the moment, setting "LANG=C" on a Linux system *fundamentally breaks Python 3*, and that's not OK.
ENV LANG C.UTF-8

# install ca-certificates so that HTTPS works consistently
# the other runtime dependencies for Python are installed later
RUN apk add --no-cache ca-certificates

ENV GPG_KEY C01E1CAD5EA2C4F0B8E3571504C367C218ADD4FF
ENV PYTHON_VERSION 2.7.13

RUN set -ex \
	&& apk add --no-cache \
	    gcc \
	    g++ \
	    make \
		gnupg \
		openssl \
		tar \
		xz \
		python-dev \
		py-pip \
		postgresql-dev
# if this is called "PIP_VERSION", pip explodes with "ValueError: invalid truth value '<VERSION>'"
ENV PYTHON_PIP_VERSION 9.0.1
# COPY config/* /tmp/
RUN apk add --no-cache py-psycopg2 postgresql-client gcc postgresql-dev linux-headers
RUN set -ex; \
	\
	apk add --no-cache --virtual .fetch-deps openssl; \
	\
#	wget -O get-pip.py "http://central.preprod.melicertes.eu/repo-loads/python27/get-pip.py"; \
	\
	apk del .fetch-deps; \
	\
#	python get-pip.py \
#		--disable-pip-version-check \
#		--no-cache-dir \
#		"pip==$PYTHON_PIP_VERSION" \
#	; \



	pip --version; \
	\
	find /usr/local -depth \
		\( \
			\( -type d -a -name test -o -name tests \) \
			-o \
			\( -type f -a -name '*.pyc' -o -name '*.pyo' \) \
		\) -exec rm -rf '{}' +; \
	rm -f get-pip.py

#RUN cd /tmp \
#    && pip install -r requirements.txt \
#    && rm -f requirements.txt

RUN apk add --no-cache curl

# VIPER STUFF

RUN pip install --upgrade pip

RUN apk add --no-cache libffi-dev \
    freetype-dev \
    freetype \
    libpng-dev

RUN pip --no-cache-dir install matplotlib

USER root

RUN pip install \
    SQLAlchemy \
    PrettyTable \
    python-magic \
    requests


RUN wget https://github.com/ssdeep-project/ssdeep/releases/download/release-2.14.1/ssdeep-2.14.1.tar.gz && \
    tar -zxvf ssdeep-2.14.1.tar.gz && \
    cd ssdeep-2.14.1 && \
    sh configure && make && \
    make install && \
    pip install pydeep

RUN apk add --no-cache \
	    git


RUN mkdir /home/viper
WORKDIR /home/viper
RUN git clone https://github.com/viper-framework/viper.git
WORKDIR /home/viper/viper
#RUN pip install numpy
#RUN apk add --no-cache numpy
#RUN echo git+https://github.com/viper-framework/pefile.git#egg=pefile > constraints.txt
#RUN cp constraints.txt exclude.txt
#RUN cat constraints.txt
#RUN sed -i '/git+https:\/\/github.com\/viper-framework\/pefile.git#egg=pefile/d' requirements-modules.txt
RUN pip install -r requirements.txt

CMD ["python", "../viper/viper-cli"]
#CMD ["../viper/api.py"]
#CMD ["../viper/web.py","-H", "localhost", "-p", "9090"]


#CMD ["python2"]
