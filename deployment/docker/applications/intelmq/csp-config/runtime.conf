{
    "csp-rest-api-output": {
        "description": "REST API is the bot responsible to send events to a CSP EMITTER REST API listener through POST.",
        "group": "Output",
        "module": "intelmq.bots.outputs.restapi.output",
        "name": "CSP EMITTER REST API",
        "parameters": {
            "auth_token": "<token>",
            "auth_token_name": "<token name>",
            "auth_type": "<http_basic_auth/http_header>",
            "hierarchical_output": false,
            "host": "http://csp-imq-adapter:8081/intelmq/v1/emitter",
            "use_json": true
        }
    },
    "file-collector": {
        "description": "Fileinput collector fetches data from a file.",
        "group": "Collector",
        "module": "intelmq.bots.collectors.file.collector_file",
        "name": "File",
        "parameters": {
            "chunk_replicate_header": true,
            "chunk_size": null,
            "delete_file": true,
            "feed": "FileCollector",
            "path": "/tmp/intelmq-fileinput",
            "postfix": ".json",
            "provider": "",
            "rate_limit": 100
        }
    },
    
    "cymru-whois-expert": {
        "description": "Cymry Whois (IP to ASN) is the bot responsible to add network information to the events (BGP, ASN, AS Name, Country, etc..).",
        "group": "Expert",
        "module": "intelmq.bots.experts.cymru_whois.expert",
        "name": "Cymru Whois",
        "parameters": {
            "redis_cache_db": 5,
            "redis_cache_host": "127.0.0.1",
            "redis_cache_password": null,
            "redis_cache_port": 6379,
            "redis_cache_ttl": 86400
        }
    },
    "deduplicator-expert": {
        "description": "Deduplicator is the bot responsible for detection and removal of duplicate messages. Messages get cached for <redis_cache_ttl> seconds. If found in the cache, it is assumed to be a duplicate.",
        "group": "Expert",
        "module": "intelmq.bots.experts.deduplicator.expert",
        "name": "Deduplicator",
        "parameters": {
            "filter_keys": "raw,time.observation",
            "filter_type": "blacklist",
            "redis_cache_db": 6,
            "redis_cache_host": "127.0.0.1",
            "redis_cache_password": null,
            "redis_cache_port": 6379,
            "redis_cache_ttl": 86400
        }
    },
    "file-output": {
        "description": "File is the bot responsible to send events to a file.",
        "group": "Output",
        "module": "intelmq.bots.outputs.file.output",
        "name": "File",
        "parameters": {
            "file": "/opt/intelmq/var/lib/bots/file-output/events.txt",
            "hierarchical_output": false
        }
    },
    "gethostbyname-1-expert": {
        "description": "fqdn2ip is the bot responsible to parsing the ip from the fqdn.",
        "group": "Expert",
        "module": "intelmq.bots.experts.gethostbyname.expert",
        "name": "Gethostbyname",
        "parameters": {}
    },
    "gethostbyname-2-expert": {
        "description": "fqdn2ip is the bot responsible to parsing the ip from the fqdn.",
        "group": "Expert",
        "module": "intelmq.bots.experts.gethostbyname.expert",
        "name": "Gethostbyname",
        "parameters": {}
    },
    "spamhaus-drop-collector": {
        "description": "",
        "group": "Collector",
        "module": "intelmq.bots.collectors.http.collector_http",
        "name": "Spamhaus Drop",
        "parameters": {
            "feed": "Spamhaus Drop",
            "http_password": null,
            "http_url": "https://www.spamhaus.org/drop/drop.txt",
            "http_username": null,
            "provider": "Spamhaus",
            "rate_limit": 3600,
            "ssl_client_certificate": null
        }
    },
    "spamhaus-drop-parser": {
        "description": "Spamhaus Drop Parser is the bot responsible to parse the DROP, EDROP, DROPv6, and ASN-DROP reports and sanitize the information.",
        "group": "Parser",
        "module": "intelmq.bots.parsers.spamhaus.parser_drop",
        "name": "Spamhaus Drop",
        "parameters": {}
    },
    "taxonomy-expert": {
        "description": "Taxonomy is the bot responsible to apply the eCSIRT Taxonomy to all events.",
        "group": "Expert",
        "module": "intelmq.bots.experts.taxonomy.expert",
        "name": "Taxonomy",
        "parameters": {}
    },
    "url2fqdn-expert": {
        "description": "url2fqdn is the bot responsible to parsing the fqdn from the url.",
        "group": "Expert",
        "module": "intelmq.bots.experts.url2fqdn.expert",
        "name": "url2fqdn",
        "parameters": {
            "load_balance": true,
            "overwrite": false
        }
    }

}